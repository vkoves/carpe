<%= stylesheet_link_tag "jquery-ui.min" %>

<%
	if current_user
		if params[:new] == "t"
			newCat = Category.new
			newCat.user = current_user #set the user to the logged in user
			newCat.color = params[:col]
			newCat.name = params[:name]
			newCat.save
		elsif params[:dest] == "t"
			id = params[:id]
			Category.find_by_id(id).destroy
		elsif params[:edit] == "t"
			id = params[:id]
			name = params[:name]
			col = params[:col]
			findCat = Category.find_by_id(id)
			findCat.name = name
			findCat.color = col
			findCat.save	
		end #all ruby blocks, including if statements, have to end with an end
	end
%>

<div class="ui-widget-overlay" onclick="hideOverlay();"></div>
<div class="overlay-box">
	<div class="overlay-time">10:00am - 12:00pm</div>
	<div class="overlay-title">CS 331</div>
	<div class="overlay-desc">Look at this young description of a CS 331 event that we are talking about in this place</div>
</div>

<br /><div id="cont-hold">
	<h1 class="no-bold zero-bot">Your Schedule</h1>
	<h3 class="no-bold zero-top">It all starts here. The scheduling revolution</h3>
	<br />
	
	<div class="sch-but-holder">
		<span class="sch-but sch-week-prev" onclick="addDates(new Date(refDate.getYear()+1900,refDate.getMonth(),refDate.getDate()-7), true)">Previous</span> 
		&nbsp; 
		<span class="sch-but sch-week-next" onclick="addDates(new Date(refDate.getYear()+1900,refDate.getMonth(),refDate.getDate()+7), true)">Next</span> 
			<!-- <text> is not an actual tag, but this allows for direct styling and no excess spacing issues with <div> or <p> -->
	</div>
	
	<div id="sch-sidebar">
		<span id="sidebar-title" title="Drag these events onto the schedule to get started" onclick="createCategory();">Events</span>
			
		<div id="sch-tiles">
		<!-- <div class="sch-evnt sch-class">
			<div class="evnt-time">7:30</div>
			<div class="evnt-title center-text dis-sel" contenteditable="true" onclick="showOverlay($(this).parent())">Class</div>
			<div class="evnt-desc dis-sel" onclick="showOverlay($(this).parent())"	>CS 331 with Professor Beckman. Location: E1 218</div>
			<%= image_tag "quill.png", :class => "sch-evnt-edit sch-evnt-icon", :onclick => "editEvent(event, this);" %>
			<%= image_tag "close.png", :class => "sch-evnt-close sch-evnt-icon", :onclick => "removeEvent(event, this);" %>
		</div>
		<div class="sch-evnt sch-work">
			<div class="evnt-time">7:30</div>
			<div class="evnt-title center-text dis-sel" contenteditable="true" onclick="showOverlay($(this).parent())">Work</div>
			<div class="evnt-desc dis-sel" onclick="showOverlay($(this).parent())">indigoBox Website Redesign at iit</div>
			<%= image_tag "quill.png", :class => "sch-evnt-edit sch-evnt-icon", :onclick => "editEvent(event, this);" %>
			<%= image_tag "close.png", :class => "sch-evnt-close sch-evnt-icon", :onclick => "removeEvent(event, this);" %>
		</div>
		<div class="sch-evnt sch-play">
			<div class="evnt-time">7:30</div>
			<div class="evnt-title center-text dis-sel" contenteditable="true" onclick="showOverlay($(this).parent())">Play</div>
			<div class="evnt-desc dis-sel" onclick="showOverlay($(this).parent())">Oblivion - Play through first three story missions</div>
			<%= image_tag "quill.png", :class => "sch-evnt-edit sch-evnt-icon", :onclick => "editEvent(event, this);" %>
			<%= image_tag "close.png", :class => "sch-evnt-close sch-evnt-icon", :onclick => "removeEvent(event, this);" %>
		</div>
		<div class="sch-evnt sch-hangout">
			<div class="evnt-time">7:30</div>
			<div class="evnt-title center-text dis-sel" contenteditable="true" onclick="showOverlay($(this).parent())">Hangout</div>
			<div class="evnt-desc dis-sel" onclick="showOverlay($(this).parent())">Spend time with Robert and Eileen at Bee & Tea</div>
			<%= image_tag "quill.png", :class => "sch-evnt-edit sch-evnt-icon", :onclick => "editEvent(event, this);" %>
			<%= image_tag "close.png", :class => "sch-evnt-close sch-evnt-icon", :onclick => "removeEvent(event, this);" %>
		</div>	Previous implementation of schedule categories. See below for what we do now.-->
		
		<!-- Actually, what we do know is really influenced a lot by the practice code Viktor supplied Robert.
			You'll definitely be seeing traces (if not entire snippets) in here. -->
			
		<% Category.all.each do |cat| %>
			<div class="sch-evnt category" style="background-color:<%= cat.color %>">
			<div class="evnt-time">7:30</div>
			<div class="evnt-title center-text dis-sel" contenteditable="true" onclick="showOverlay($(this).parent())"><%= cat.name %></div>
			<div class="evnt-desc dis-sel" onclick="showOverlay($(this).parent())">Oblivion - Play through first three story missions</div>
			<%= image_tag "checkmark.png", :class => "sch-evnt-saveCat sch-cat-icon", :onclick => "saveCategory(event, this, #{cat.id});" %>
			<%= image_tag "quill.png", :class => "sch-evnt-editCat sch-cat-icon", :onclick => "editCategory(event, this);" %>
			<%= image_tag "close.png", :class => "sch-evnt-delCat sch-cat-icon", :onclick => "delCategory(event, this, #{cat.id});" %>
			<%= image_tag "quill.png", :class => "sch-evnt-edit sch-evnt-icon", :onclick => "editEvent(event, this);" %>
			<%= image_tag "close.png", :class => "sch-evnt-close sch-evnt-icon", :onclick => "removeEvent(event, this);" %>
			<div class="futureColors" style="position:absolute;padding-top:4px;width:100%;">
			
			</div>
		</div>
		<% end %>
		
		
		
		</div>
		
		<div class="cat-add" onclick="createCategory();">+ New Event</div>
	</div>
	<div id="sch-main">
		
		<div id="sch-days">
			<div class="sch-day-col">
				<span class="col-titler">Monday</span>
				<div class="col-snap evt-snap"></div>
			</div>
			<div class="sch-day-col">
				<span class="col-titler">Tuesday</span>
				<div class="col-snap evt-snap"></div>
			</div>
			<div class="sch-day-col">
				<span class="col-titler">Wednesday</span>
				<div class="col-snap evt-snap"></div>
			</div>
			<div class="sch-day-col">
				<span class="col-titler">Thursday</span>
				<div class="col-snap evt-snap"></div>
			</div>
			<div class="sch-day-col">
				<span class="col-titler">Friday</span>
				<div class="col-snap evt-snap"></div>
			</div>
			<div class="sch-day-col">
				<span class="col-titler">Saturday</span>
				<div class="col-snap evt-snap"></div>
			</div>
			<div class="sch-day-col">
				<span class="col-titler">Sunday</span>
				<div class="col-snap evt-snap"></div>
			</div>
		</div>
	</div>
</div>
<script>
var sideHTML; // Instantiates sideHTML variable
var gridHeight = 25; //the height of the grid of resizing and dragging
var border = 2; //the border at the bottom for height stuff
var ctrlPressed = false;
var schHTML; // Instantiates schedule HTML variable, which will contain the "Mon-Sun" html on the main scheduler div.
var refDate = new Date(); // Reference date for where the calendar is now, so that it can switch between weeks.


$(window).keydown(function(evt) {
  if (evt.which == 17) { // ctrl
    ctrlPressed = true;
  }
}).keyup(function(evt) {
  if (evt.which == 17) { // ctrl
    ctrlPressed = false;
  }
});


$(document).ready(function()
{
	setTitles();
	
	
	sideHTML = $("#sch-tiles").html(); //the sidebar html for restoration upon drops
	schHTML = $("#sch-days").html(); //The HTML for the scheduler days layout, useful for when days are refreshed
	
	$("#sidebar-title").tooltip({
		position: { my: "left top", at: "left bottom"}	
	}); //toss a tooltip on the events text
	
	
	//Add tooltips, which are also in add drag
	$(".evnt-desc").tooltip({
		position: { my: "left+15 top", at: "left bottom"}
	}); //toss a tooltip on the events text
	
	addDrag(); //add dragging, recursively
	
	colDroppable();
	
	addDates(new Date(), false);
});

function colDroppable()
{
	//make the columns droppable
	$(".col-snap").droppable({
		drop: function( event, ui ) //called when event is dropped on a new column (not called on moving it in the column)
		{
			if(ui.draggable.parent().attr("id") == "sch-tiles")
			{
				var topVal = parseFloat(ui.draggable.css("top"));
				topVal += 16;
				if(topVal < 0) //make sure the event is not halfway off the top
				{
					topVal = 0;
				}
				else if(topVal > $(this).height() - ui.draggable.outerHeight()) //or bottom
				{
					topVal = $(this).height() - ui.draggable.outerHeight();
				}
				ui.draggable.css("top",topVal);
			}
			
	    	var element = ui.draggable.detach();
			$(this).append(element);
			ui.draggable.css("left","0px");
			//ui.draggable.children(".sch-evnt-icon").show();
			ui.draggable.children(".evnt-desc").show();
			$(this).parent().css("background","");
			
			$(ui.draggable).resizable({
		    	handles: 'n, s',
		    	grid: [ 0, gridHeight ],
		    	containment: "parent",
		    	resize: function(event, ui)
		    	{
		    		updateTime($(this), ui);
		    	}
			});
		},
		over: function( event, ui ) {
			$(this).parent().css("background","rgb(255, 255, 151)");
			$(ui.draggable).draggable("option","gridOn", true);
		},
		out: function( event, ui ) {
			$(this).parent().css("background","");
			$(ui.draggable).draggable("option","gridOn", false);
		}
	});
}

//the dragging function
function addDrag(selector)
{
	if (selector == null)
		selector = "#sch-sidebar .sch-evnt";
		
	$(selector).draggable({
		containment: "window",
		snap: ".evt-snap",
		snapMode: "inner",
		appendTo: ".col-snap",
		cancel: "img",
		revert: "invalid",
		revertDuration: 0,
		stack: ".sch-evnt",
		opacity: 0.7,
		distance: 10,
		gridOn: false,
		start: function(event, ui)
		{
			var height = parseFloat($(this).css("height"));
			if((height+2)%gridHeight != 0)
				$(this).css("height", (gridHeight*3)-2);
			$(this).children(".evnt-time").show();
			
			if(ctrlPressed && $(this).parent().attr("id") != "sch-tiles")
			{
				var clone = $(ui.helper).clone();;
				$(this).parent().append(clone);
				clone.removeClass("ui-draggable ui-draggable-handle ui-resizable ui-draggable-dragging");  
				clone.css("opacity","1");
				clone.css("z-index","0")
				clone.children('.ui-resizable-handle').remove();
				
				addDrag(clone);
				$(clone).resizable({
			    	handles: 'n, s',
			    	grid: [ 0, gridHeight ],
			    	containment: "parent",
			    	resize: function(event, ui)
			    	{
			    		updateTime($(this), ui);
			    	}
				});
			}
		},
		stop: function(event, ui) 
		{
			$("#sch-tiles").html(sideHTML);
			
			$(".evnt-title").on("keydown",function(e){
			    var key = e.keyCode || e.charCode;  // ie||others
			    if(key == 13)  // if enter key is pressed
			    {
					e.preventDefault();
				    $(this).blur();  // lose focus	
			    }
			});
			
			$("#sch-tiles .evnt-desc").tooltip({
				position: { my: "left+15 top", at: "left bottom"}
			}); //toss a tooltip on the events text
			
			$(this).css("position","absolute");
			$(this).css("margin-top","0px");
			addDrag();
			
			var topVal = parseFloat($(this).css("top"));
			if(topVal < 0) //make sure the event is not halfway off the top
			{
				topVal = 0;
			}
			else if(topVal > $(this).parent().height() - $(this).outerHeight()) //or bottom
			{
				topVal = $(this).parent().height() - $(this).outerHeight();
			}
			$(this).css("top",topVal);
		},
		drag: function(event, ui)
		{
			updateTime($(this), ui);
		}
	});
}

function updateTime(elem, ui)
{
	var timeDiv = $(elem).children(".evnt-time");
	var arr = timeDiv.html().split(":");

	//custom grid stuff using drag
    if($(elem).parent().attr("id") == "sch-tiles")
    {
    	var topRemainder = (ui.position.top + 16) % gridHeight;
		if($(elem).draggable('option', 'gridOn'))
		{
    		ui.position.top = ui.position.top - topRemainder;
			arr[0] = (ui.position.top + 16)/gridHeight + 7;
		}
    }
    else
    {
    	var topRemainder = (ui.position.top) % gridHeight;
		if($(elem).draggable('option', 'gridOn'))
     	{
     		ui.position.top = ui.position.top - topRemainder;
			arr[0] = ui.position.top/gridHeight + 7;
    	}
    }
    

	timeDiv.html(arr.join(":"));	
}

function addDates(referenceDate, refresh)
{
	var currDate = referenceDate;
	var day = currDate.getDay();
	var date = currDate.getDate();
	var month = currDate.getMonth();
	var year = currDate.getFullYear();
	var dayOffset = day - 1;
	var startDate;
	var lastCurrMonth = new Date(year, month + 1, 0);
	var lastPrevMonth = new Date(year, month, 0);
	var lastDateCurr = lastCurrMonth.getDate();
	var lastDatePrev = lastPrevMonth.getDate();
	var lastMonth = false;
	var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
	"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
	var todayDate = new Date();
	
	
	refDate = currDate;
	lastReportedDate = date;
	lastReportedMonth = month;
	
	if(refresh)
	{
		$("#sch-days").html(schHTML); // Refresh the layout so that we can properly prepend and append text below here
		colDroppable();
	}
	
	if(day == 0)
		startDate = date - 6;
	else
		startDate = date - dayOffset;
	
	if(startDate <= 0) //if the start is in the last month
	{
		startDate = lastDatePrev + startDate;
		lastMonth = true;
		lastReportedMonth = month - 1;
	}
	
	$(".sch-day-col").each(function(index, col)
	{
		if((startDate == date) && (referenceDate.toDateString() == todayDate.toDateString())) //if this is the same day of week, and is the correct week (is it today?)
		{
			$(col).attr("id","sch-col-today");	
		}
		if(startDate <= lastDateCurr+1)
		{
			$(col).children(".col-titler").prepend("<div class='evnt-date'>" + startDate + "</div> ");
			if(lastMonth && ((month-1)>-1))
				$(col).children(".col-titler").append("<br><div class='evnt-fulldate'>" + monthNames[month-1] + " " + startDate + ", " + year + "</div>");
			else if (lastMonth &&((month-1)==-1))
				$(col).children(".col-titler").append("<br><div class='evnt-fulldate'>" + monthNames[11] + " " + startDate + ", " + (year-1) + "</div>");
			else
				$(col).children(".col-titler").append("<br><div class='evnt-fulldate'>" + monthNames[month] + " " + startDate + ", " + year + "</div>");
				
			if((startDate == lastDateCurr && !lastMonth) || (startDate == lastDatePrev && lastMonth)) //if this is the last day in the month, reset the count
			{
				startDate = 0;
				month++;
			}
		}
		startDate++;
	});
}

function createCategory() {
	window.location.href = './schedule?new=t&name=Untitled';
	//window.location.href = './schedule';
}

function editCategory(event, elem, id){
	event.stopImmediatePropagation();
	$(elem).siblings(".sch-evnt-editCat").css("display","none");
	$(elem).siblings(".sch-evnt-saveCat").css("display","inline");
	$(elem).siblings(".evnt-title").trigger('focus');
	document.execCommand('selectAll',false,null);
	$(elem).siblings(".futureColors").append("<div style='display:inline-block;background-color:red;width:25px;height:25px;' onclick='changeCategoryColor(event,this,\"Red\")'></div> ");
	$(elem).siblings(".futureColors").append("<div style='display:inline-block;background-color:orange;width:25px;height:25px;' onclick='changeCategoryColor(event,this,\"Orange\")'></div> ");
	$(elem).siblings(".futureColors").append("<div style='display:inline-block;background-color:yellow;width:25px;height:25px;' onclick='changeCategoryColor(event,this,\"Yellow\")'></div> ");
	$(elem).siblings(".futureColors").append("<div style='display:inline-block;background-color:green;width:25px;height:25px;' onclick='changeCategoryColor(event,this,\"Green\")'></div><br/>");
	$(elem).siblings(".futureColors").append("<div style='display:inline-block;background-color:blue;width:25px;height:25px;' onclick='changeCategoryColor(event,this,\"Blue\")'></div> ");
	$(elem).siblings(".futureColors").append("<div style='display:inline-block;background-color:indigo;width:25px;height:25px;' onclick='changeCategoryColor(event,this,\"Indigo\")'></div> ");
	$(elem).siblings(".futureColors").append("<div style='display:inline-block;background-color:violet;width:25px;height:25px;' onclick='changeCategoryColor(event,this,\"Violet\")'></div> ");
	$(elem).siblings(".futureColors").append("<div style='display:inline-block;background-color:silver;width:25px;height:25px;' onclick='changeCategoryColor(event,this,\"Silver\")'></div>");
}

function changeCategoryColor(event,elem,col) {
	$(elem).parent().parent().css("background-color",col);
}

function saveCategory(event,elem,id) {
	window.location.href = './schedule?edit=t&id=' + id + '&name=' + $(elem).siblings(".evnt-title").html() + '&col=' + $(elem).parent().css("background-color");
}

function delCategory(event, elem, id)
{
	/*event.stopImmediatePropagation();
	$(elem).parent().slideUp("normal", function() { $(this).remove(); } );*/
	window.location.href = './schedule?dest=t&id=' + id;
	//window.location.href = './schedule';
}

function removeEvent(event, elem)
{
	event.stopImmediatePropagation();
	$(elem).parent().slideUp("normal", function() { $(this).remove(); } );
}

function editEvent(event, elem)
{
	event.stopImmediatePropagation();
	$(elem).siblings(".evnt-title").trigger('focus');
	document.execCommand('selectAll',false,null);
}

function showOverlay(elem)
{
	$(".ui-widget-overlay").show();
	$(".overlay-box").show();
	var title = $(elem).children(".evnt-title").html();
	var desc = $(elem).children(".evnt-desc").html();
	var time = $(elem).children(".evnt-time").html();
	var arr = time.split(":");
	arr[0] = parseInt(arr[0])+$(elem).outerHeight()/gridHeight;
	var endTime = arr.join(":");
	$(".overlay-title").html(title);
	$(".overlay-desc").html(desc);
	$(".overlay-time").html(time + " - " + endTime);
}

function hideOverlay()
{
	$(".ui-widget-overlay").hide();
	$(".overlay-box").hide();
}

function setTitles()
{
	$(".evnt-desc").each(function(index, desc)
	{
		$(desc).attr("title", $(desc).text());
	});
}
</script>
